
Blockchain is the algorithm for Distributed Ledger Technology (DLT ).
A blockchain, originally block chain, is a growing list of records, called blocks, which are linked using cryptography.
Each block contains a cryptographic hash of the previous block, a timestamp, and transaction data.
By design, a blockchain is resistant to modification of the data.
DLT and Blockchain as a concept can be used in varied applications beyond crypto-currency network (Bitcoin, Ethereum), Real estate,
logistics, Banking and Financial Sector, Fin-Tech and elections & surveys.


Blockchain was invented by a person (or group of people) using the name Satoshi Nakamoto in 2008 to serve as the public transaction
ledger of the cryptocurrency bitcoin. The identity of Satoshi Nakamoto is unknown.


Applications / Frameworks / Platforms
----------------------------
Bitcoin       (Cryptocurrency application)           (Public Blockchain)
Ethereum      (Platform, used for creating DApp(s))  (Public Blockchain)


Hyperledger Project                                  (Enterprise Blockchain)
---------------------------
Project by Linux Foundation
To create a custom BlockChain for industries
It is a collection of Frameworks and Tools


Main problems solved
-----------------------
1. Double Spending problem
     Double-spending is a potential flaw in a digital cash scheme in which the same single digital token can be spent more than once.
     Unlike physical cash, a digital token consists of a digital file that can be duplicated or falsified.
2. Need for trusted third party problem
     It allows disintermediation which allows Peer to Peer economy without or minimum intermediaries.
3. Decentralized
4. Immutable
5. Consensus
6. Secure
7. Reduce reconciliation
8. Public records
9. Democratization
     


Infrastructure
---------------
A blockchain exists out of blocks of data. 
These blocks of data are stored on nodes (compare it to small servers). 
Nodes can be any kind of device (mostly computers, laptops or even bigger servers).
Nodes form the infrastructure of a blockchain. 
All nodes on a blockchain are connected to each other and they constantly exchange the latest blockchain data with each other so all nodes stay up to date. 



Block Structure
---------------------
Block no.
Data (Transactions/Ledger)
Nonce ( an arbitrary number that can be used just once in a cryptographic communication )
Block hash
Previous Block hash

Block no. | Data | Nonce | Prev. Block hash    are used for generating current block hash



Chain
----------
Blocks are connected to form a chain.
These CHAINS are prevented from attacker as:
 - if attacker changes hash of current block
 - the previous pointer of next block will also need to be changed
 - so all subsequent blocks hash needs to be recalculated to complete a chain
 - Proof of work (PoW), a software protocol, involved will make it further difficult

   Proof of Work
      - It validates the hash values of block whose data is changed to block whose hash
      - Produce a challenge to user / computer
      - user / computer must produce a result to challenge
      - motive is to generate a value that is difficult to generate ( in terms of CPU power ) and yet easily verifiable
      - example : generation of N leading zeros in block hash
      - This is achieved using NONCE and BLOCK DATA



Transactions
-----------------
When a new block of transaction is added , Nodes check if a block of transactions is valid and either accept or reject it.
Nodes save and store blocks of transactions (storing blockchain transaction history).
Nodes broadcast and spread this transaction history to other nodes that may need to synchronize with the blockchain (need to be updated on transaction history).

a FULL NODE or LEADER NODE is a full copy of the blockchain transaction history on any device.
It participates in consensus algorithm and updates it's ledger, once all other nodes updated.

Nodes can be online or offline. 
Online nodes are receiving, saving and broadcasting all the latest blocks of transactions from and to other nodes, while offline nodes do not. 
When an offline node comes back online, it will need to catch up with the rest of the blockchain first by downloading all blocks that were added to the blockchain ever since the node went offline. 
This process is often referred to as synchronizing with the blockchain.

Transactions data/record is stored in BLOCK in form of a MERKEL TREE
 - Transaction records are hashed
 - Then they are paired and hashed again
 - This process repeats until there is one ROOT hash, this gives a MERKEL TREE structure

Each transaction record is signed by PRIVATE KEY of SENDER
This signature is appended with TRANSACTION
This can be used to validate that TRANSACTION is initiated by particular SENDER
PUBLIC KEY of SENDER is used to generate SIGNATURE which can be validated



Blockchain Demo
-----------------------
Visit  :  https://anders.com/blockchain/




